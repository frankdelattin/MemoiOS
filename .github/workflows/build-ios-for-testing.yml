name: Build iOS for Testing

on:
  workflow_dispatch: # Manual trigger
  push:
    branches: [ feature/vector-cleanup-implementation ]

jobs:
  build-ios:
    name: Build iOS App for BrowserStack Testing
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.0'
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate ObjectBox files
      run: |
        dart run build_runner build --delete-conflicting-outputs
        
    - name: Download ONNX models and tokenizer
      run: |
        mkdir -p assets/models/tokenizers
        curl -L -o assets/models/nlp_visualize_opset3.onnx https://clip-as-service.s3.us-east-2.amazonaws.com/models/onnx/ViT-B-32/visual.onnx
        curl -L -o assets/models/nlp_visualize.onnx https://clip-as-service.s3.us-east-2.amazonaws.com/models/onnx/ViT-B-32/visual.onnx
        curl -L -o assets/models/nlp_textual_opset3.onnx https://clip-as-service.s3.us-east-2.amazonaws.com/models/onnx/ViT-B-32/textual.onnx
        curl -L -o assets/models/nlp_textual.onnx https://clip-as-service.s3.us-east-2.amazonaws.com/models/onnx/ViT-B-32/textual.onnx
        curl -L -o assets/models/tokenizers/nlp_textual_tokenizer.txt.gz https://github.com/openai/CLIP/raw/main/clip/bpe_simple_vocab_16e6.txt.gz
        
    - name: Build iOS app (debug, no codesign)
      run: |
        echo "Starting iOS build..."
        flutter build ios --debug --no-codesign --verbose
        
        # Check if build actually succeeded by looking for Runner.app
        if [ ! -d "build/ios/Debug-iphoneos/Runner.app" ] && [ ! -d "build/ios/iphoneos/Runner.app" ]; then
          echo "‚ùå iOS build failed - no Runner.app created"
          echo "Checking for common iOS build issues..."
          
          # Check if iOS project exists
          if [ ! -f "ios/Runner.xcodeproj/project.pbxproj" ]; then
            echo "‚ùå iOS project files missing"
          fi
          
          # Check for CocoaPods issues
          if [ ! -f "ios/Podfile.lock" ]; then
            echo "‚ö†Ô∏è Podfile.lock missing - running pod install"
            cd ios && pod install && cd ..
            echo "Retrying iOS build after pod install..."
            flutter build ios --debug --no-codesign --verbose
          fi
          
          # Final check
          if [ ! -d "build/ios/Debug-iphoneos/Runner.app" ] && [ ! -d "build/ios/iphoneos/Runner.app" ]; then
            echo "‚ùå iOS build still failed after pod install"
            exit 1
          fi
        fi
        
        echo "‚úÖ iOS build completed successfully"
        
    - name: Verify build output and create archive
      run: |
        echo "Checking build output directories..."
        find . -name "Runner.app" -type d || echo "Runner.app not found"
        ls -la build/ || echo "build/ not found"
        
        # Check different possible locations for Runner.app
        if [ -d "build/ios/Debug-iphoneos/Runner.app" ]; then
          echo "Found Runner.app in build/ios/Debug-iphoneos/"
          cd build/ios/Debug-iphoneos
          zip -r SnappApp-iOS-Debug.zip Runner.app
        elif [ -d "build/ios/iphoneos/Runner.app" ]; then
          echo "Found Runner.app in build/ios/iphoneos/"
          cd build/ios/iphoneos
          zip -r SnappApp-iOS-Debug.zip Runner.app
        elif [ -d "ios/build/ios/iphoneos/Runner.app" ]; then
          echo "Found Runner.app in ios/build/ios/iphoneos/"
          cd ios/build/ios/iphoneos
          zip -r SnappApp-iOS-Debug.zip Runner.app
        elif [ -d "build/ios/iphonesimulator/Runner.app" ]; then
          echo "Found Runner.app in build/ios/iphonesimulator/"
          cd build/ios/iphonesimulator
          zip -r SnappApp-iOS-Debug.zip Runner.app
        else
          echo "‚ùå Runner.app not found in any expected location"
          echo "Available directories:"
          find . -name "*.app" -type d || echo "No .app directories found"
          exit 1
        fi
        
    - name: Upload iOS app artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-app-for-testing
        path: |
          build/ios/Debug-iphoneos/SnappApp-iOS-Debug.zip
          build/ios/iphoneos/SnappApp-iOS-Debug.zip
          ios/build/ios/iphoneos/SnappApp-iOS-Debug.zip
        retention-days: 7
        
    - name: Build summary
      run: |
        echo "üéâ iOS app built successfully!"
        echo "üì± Download the artifact from GitHub Actions"
        echo "üì§ Upload SnappApp-iOS-Debug.zip to BrowserStack"
        echo "üß™ Ready for vector cleanup testing!"
